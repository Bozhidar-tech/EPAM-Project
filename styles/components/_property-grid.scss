@use "../base/variables" as var;
@use "../base/mixins" as mix;
@use "sass:map";

.properties {
  margin-top: map.get(var.$spacing-scale, "3");
  text-align: center;

  h2 {
    font-size: map.get(var.$spacing-scale, "2");
    color: var.$primary-color;
    margin-bottom: map.get(var.$spacing-scale, "20px");
  }
}

.property-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: map.get(var.$spacing-scale, "20px");
  margin-bottom: map.get(var.$spacing-scale, "3");

  @include mix.respond-to(var.$tablet) {
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  }

  @include mix.respond-to(var.$mobile) {
    grid-template-columns: 1fr;
  }
}

.property-item {
  @include mix.transition-all;
  @include mix.card-style;

  padding: map.get(var.$spacing-scale, "20px");
  text-align: center;
  border: 1px solid var.$text-color;
  display: flex;
  flex-direction: column;
  align-items: center;

  img {
    width: 300px;
    height: 300px;
    max-width: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: var.$border-radius;
    margin-bottom: map.get(var.$spacing-scale, "15px");

    @include mix.respond-to(var.$mobile) {
      width: 280px;
      height: 280px;
    }
  }

  .property-name {
    font-size: map.get(var.$spacing-scale, "15");
    font-weight: bold;
    color: var.$text-color;
    margin-top: map.get(var.$spacing-scale, "15px");
  }

  .property-price {
    font-size: map.get(var.$spacing-scale, "1");
    color: var.$primary-color;
    margin-top: map.get(var.$spacing-scale, "10px");
    font-weight: 600;
  }

  &:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgb(0 0 0 / 10%);
  }
}
