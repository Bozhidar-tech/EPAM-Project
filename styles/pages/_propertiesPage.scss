@use "sass:color";
@use "sass:map";
@use "../base/mixins" as mix;
@use "../base/variables" as var;

.properties-container {
  padding: map.get(var.$spacing-scale, "3");
  max-width: var.$max-width;
  margin: 0 auto;
  min-height: 80vh;
}

.search-filters {
  margin-bottom: var.$spacing-unit * 2;
  display: flex;
  flex-wrap: wrap;
  gap: map.get(var.$spacing-scale, "1");
  align-items: center;
  justify-content: space-between;
}

.search-bar {
  flex: 1;
  min-width: 250px;
  display: flex;
}

.search-bar input {
  flex: 1;
  padding: map.get(var.$spacing-scale, "075");
  border: 1px solid color.adjust(var.$card-bg-color, $lightness: -10%);
  border-radius: var.$border-radius 0 0 var.$border-radius;
  background: var.$card-bg-color;
  color: var.$text-color;
  font-size: map.get(var.$spacing-scale, "1");
}

.search-bar input::placeholder {
  color: color.adjust(var.$card-bg-color, $lightness: 30%);
}

.search-bar button {
  @include mix.button-style;
  
  border-radius: 0 var.$border-radius var.$border-radius 0;
  padding: 0 map.get(var.$spacing-scale, "15");
}

.filter-controls {
  display: flex;
  gap: map.get(var.$spacing-scale, "1");
  flex-wrap: wrap;
}

.filter-controls select {
  padding: map.get(var.$spacing-scale, "075");
  border: 1px solid color.adjust(var.$card-bg-color, $lightness: -10%);
  border-radius: var.$border-radius;
  background: var.$card-bg-color;
  color: var.$text-color;
  font-size: map.get(var.$spacing-scale, "1");
  cursor: pointer;
  
  @include mix.transition-all;
}

.filter-controls select:hover {
  border-color: var.$primary-color;
}

.filter-controls select option {
  background: var.$bg-color;
}

@include mix.respond-to(var.$tablet) {
  .search-filters {
    flex-direction: column;
  }

  .search-bar,
  .filter-controls {
    width: 100%;
  }
}

.property-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
  gap: map.get(var.$spacing-scale, "4");
  margin-bottom: var.$spacing-unit * 2;
}

@include mix.respond-to(var.$tablet) {
  .property-grid {
    grid-template-columns: 1fr;
  }
}

.property-card {
  @include mix.card-style;
  
  overflow: hidden;
  width: 100%;
  max-width: 320px;
  margin: 0 auto;
}

.property-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 20px rgb(0 0 0 / 20%);
}

.property-image-container {
  position: relative;
  width: 300px;
  height: 300px;
  overflow: hidden;
}

.property-image-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  object-position: center;
  
  @include mix.transition-all;
}

.property-image-container:hover img {
  transform: scale(1.05);
}

.property-type {
  position: absolute;
  top: map.get(var.$spacing-scale, "1");
  right: map.get(var.$spacing-scale, "1");
  background: var.$primary-color;
  color: var.$text-color;
  padding: map.get(var.$spacing-scale, "025") map.get(var.$spacing-scale, "05");
  border-radius: var.$border-radius;
  font-size: map.get(var.$spacing-scale, "075");
  text-transform: capitalize;
}

.property-info {
  padding: map.get(var.$spacing-scale, "15");
}

.property-info h3 {
  margin: 0 0 map.get(var.$spacing-scale, "05");
  font-size: map.get(var.$spacing-scale, "20px");
  color: var.$heading-color;
}

.property-price {
  font-weight: bold;
  font-size: map.get(var.$spacing-scale, "1");
  color: var.$primary-color;
  margin: 0 0 map.get(var.$spacing-scale, "05");
}

.property-location {
  color: var.$secondary-color;
  margin: 0 0 map.get(var.$spacing-scale, "05");
}

.property-beds {
  color: var.$secondary-color;
  font-size: map.get(var.$spacing-scale, "1");
  margin: 0 0 map.get(var.$spacing-scale, "1");
}

.property-btn {
  @include mix.button-style;
  
  display: inline-block;
  padding: map.get(var.$spacing-scale, "05") map.get(var.$spacing-scale, "1");
  text-decoration: none;
}

.pagination-controls {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: map.get(var.$spacing-scale, "1");
  margin-top: map.get(var.$spacing-scale, "2");
}

.pagination-button {
  padding: map.get(var.$spacing-scale, "05") map.get(var.$spacing-scale, "1");
  border: 1px solid color.adjust(var.$card-bg-color, $lightness: -10%);
  background: var.$card-bg-color;
  color: var.$text-color;
  cursor: pointer;
  border-radius: var.$border-radius;
  
  @include mix.transition-all;
}

.pagination-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.pagination-button:hover:not(:disabled) {
  background: var.$primary-color;
  color: white;
  border-color: var.$primary-color;
}

.pagination-button.active {
  background: var.$primary-color;
  color: white;
  border-color: var.$primary-color;
}

.show-more-btn {
  margin-left: auto;
  
  @include mix.button-style;
}

.show-more-btn:hover {
  background: var.$btn-hover-color;
}

.no-results {
  text-align: center;
  font-size: map.get(var.$spacing-scale, "20px");
  color: var.$text-color;
  padding: map.get(var.$spacing-scale, "2");
  grid-column: 1 / -1;
  width: 100%;
}